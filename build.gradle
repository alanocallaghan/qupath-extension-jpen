plugins {
  id 'java-library'
  // To create a shadow/fat jar, including dependencies
  id 'com.github.johnrengelman.shadow' version '7.0.0'
}

ext.moduleName = 'qupath.extension.jpen'
archivesBaseName = 'qupath-extension-jpen'
description = "QuPath extension to support graphic tablet input using JPen."

version = "0.3.0"

def libName = "jpen-2.0.0"
def libZipped = file("libs/${libName}-lib.zip")
def libUnzipped = file("${buildDir}/unpacked/")

tasks.register ("extractLibs", Copy) {
    description "Extract JPen library (required before building)"
    group 'QuPath'
  
    from zipTree(libZipped)
    into libUnzipped
}

compileJava.configure {
  dependsOn(extractLibs)
}

repositories {
//  mavenLocal()
  mavenCentral()
  
  maven {
    url "https://maven.scijava.org/content/repositories/releases"
  }
  
  maven {
    url "https://maven.scijava.org/content/repositories/snapshots"
  }
  
}

dependencies {  
  // Lazily evaluate this to avoid problems during configuration
  implementation fileTree(dir: "${buildDir}/unpacked/${libName}", include: "jpen-2.jar")
  
  shadow "io.github.qupath:qupath-gui-fx:0.3.0"
  shadow "org.slf4j:slf4j-api:1.7.30"
}

processResources {
  from ("${projectDir}/LICENSE.txt") {
    into 'licenses/'
  }
}

shadowJar {
  from ("${buildDir}/unpacked/${libName}") {
    into 'natives/'
    
    include '*.dll'
    include '*.jnilib'
    include '*.so'
  } 
}


java {
    def version = project.findProperty('toolchain')
    if (!version)
        version = 11
    else if (version.strip() == 'skip')
        version = null
    if (version != null) {
        logger.quiet("Setting toolchain to {}", version)
        toolchain {
            languageVersion = JavaLanguageVersion.of(version)
        }
    }
}
